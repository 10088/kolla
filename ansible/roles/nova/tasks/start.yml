---
- name: Starting Nova data container
  docker:
    tty: True
    net: host
    pull: "{{ docker_pull_policy }}"
    restart_policy: "{{ docker_restart_policy }}"
    restart_policy_retry: "{{ docker_restart_policy_retry }}"
    state: reloaded
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
    insecure_registry: "{{ docker_insecure_registry }}"
    name: nova_data
    image: "{{ nova_data_image_full }}"
    volumes:
      - "/var/lib/nova/instances"
      - "/var/lib/libvirt"
  when: inventory_hostname in groups['compute']

- name: Starting Nova-libvirt container
  docker:
    tty: True
    net: host
    pull: "{{ docker_pull_policy }}"
    restart_policy: "{{ docker_restart_policy }}"
    restart_policy_retry: "{{ docker_restart_policy_retry }}"
    state: reloaded
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
    insecure_registry: "{{ docker_insecure_registry }}"
    privileged: True
    pid: host
    name: nova_libvirt
    image: "{{ nova_libvirt_image_full }}"
    volumes:
      - "{{ node_config_directory }}/nova-libvirt/:{{ container_config_directory }}/:ro"
      - "/run:/run"
      - "/sys/fs/cgroup:/sys/fs/cgroup"
      - "/lib/modules:/lib/modules:ro"
    volumes_from:
      - nova_data
    env:
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
  when: inventory_hostname in groups['compute']

- name: Starting Nova-api container
  docker:
    tty: True
    net: host
    pull: "{{ docker_pull_policy }}"
    restart_policy: "{{ docker_restart_policy }}"
    restart_policy_retry: "{{ docker_restart_policy_retry }}"
    state: reloaded
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
    insecure_registry: "{{ docker_insecure_registry }}"
    privileged: True
    name: nova_api
    image: "{{ nova_api_image_full }}"
    volumes:
      - "/var/lib/kolla/dev/log:/dev/log"
      - "{{ node_config_directory }}/nova-api/:{{ container_config_directory }}/:ro"
      - "/lib/modules:/lib/modules:ro"
    env:
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
  when: inventory_hostname in groups['nova-api']

- name: Starting Nova-conductor container
  docker:
    tty: True
    net: host
    pull: "{{ docker_pull_policy }}"
    restart_policy: "{{ docker_restart_policy }}"
    restart_policy_retry: "{{ docker_restart_policy_retry }}"
    state: reloaded
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
    insecure_registry: "{{ docker_insecure_registry }}"
    name: nova_conductor
    image: "{{ nova_conductor_image_full }}"
    volumes:
      - "/var/lib/kolla/dev/log:/dev/log"
      - "{{ node_config_directory }}/nova-conductor/:{{ container_config_directory }}/:ro"
    env:
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
  when: inventory_hostname in groups['nova-conductor']

- name: Starting Nova-consoleauth container
  docker:
    tty: True
    net: host
    pull: "{{ docker_pull_policy }}"
    restart_policy: "{{ docker_restart_policy }}"
    restart_policy_retry: "{{ docker_restart_policy_retry }}"
    state: reloaded
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
    insecure_registry: "{{ docker_insecure_registry }}"
    name: nova_consoleauth
    image: "{{ nova_consoleauth_image_full }}"
    volumes:
      - "/var/lib/kolla/dev/log:/dev/log"
      - "{{ node_config_directory }}/nova-consoleauth/:{{ container_config_directory }}/:ro"
    env:
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
  when: inventory_hostname in groups['nova-consoleauth']

- name: Starting Nova-novncproxy container
  docker:
    tty: True
    net: host
    pull: "{{ docker_pull_policy }}"
    restart_policy: "{{ docker_restart_policy }}"
    restart_policy_retry: "{{ docker_restart_policy_retry }}"
    state: reloaded
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
    insecure_registry: "{{ docker_insecure_registry }}"
    name: nova_novncproxy
    image: "{{ nova_novncproxy_image_full }}"
    volumes:
      - "/var/lib/kolla/dev/log:/dev/log"
      - "{{ node_config_directory }}/nova-novncproxy/:{{ container_config_directory }}/:ro"
    env:
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
  when:
    - inventory_hostname in groups['nova-novncproxy']
    - nova_console == 'novnc'

- name: Starting Nova-scheduler container
  docker:
    tty: True
    net: host
    pull: "{{ docker_pull_policy }}"
    restart_policy: "{{ docker_restart_policy }}"
    restart_policy_retry: "{{ docker_restart_policy_retry }}"
    state: reloaded
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
    insecure_registry: "{{ docker_insecure_registry }}"
    name: nova_scheduler
    image: "{{ nova_scheduler_image_full }}"
    volumes:
      - "/var/lib/kolla/dev/log:/dev/log"
      - "{{ node_config_directory }}/nova-scheduler/:{{ container_config_directory }}/:ro"
    env:
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
  when: inventory_hostname in groups['nova-scheduler']

- name: Starting Nova-spicehtml5proxy container
  docker:
    tty: True
    net: host
    pull: "{{ docker_pull_policy }}"
    restart_policy: "{{ docker_restart_policy }}"
    restart_policy_retry: "{{ docker_restart_policy_retry }}"
    state: reloaded
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
    insecure_registry: "{{ docker_insecure_registry }}"
    name: nova_spicehtml5proxy
    image: "{{ nova_spicehtml5proxy_image_full }}"
    volumes:
      - "/var/lib/kolla/dev/log:/dev/log"
      - "{{ node_config_directory }}/nova-spicehtml5proxy/:{{ container_config_directory }}/:ro"
    env:
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
  when:
    - inventory_hostname in groups['nova-spicehtml5proxy']
    - nova_console == 'spice'

- name: Starting Nova-compute container
  docker:
    tty: True
    net: host
    pull: "{{ docker_pull_policy }}"
    restart_policy: "{{ docker_restart_policy }}"
    restart_policy_retry: "{{ docker_restart_policy_retry }}"
    state: reloaded
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
    insecure_registry: "{{ docker_insecure_registry }}"
    privileged: True
    name: nova_compute
    image: "{{ nova_compute_image_full }}"
    volumes:
      - "{{ node_config_directory }}/nova-compute/:{{ container_config_directory }}/:ro"
      - "/lib/modules:/lib/modules:ro"
      - "/run:/run"
      - "/var/lib/kolla/dev/log:/dev/log"
    volumes_from:
      - nova_data
    env:
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
  when:
    - inventory_hostname in groups['compute']
    - not enable_nova_fake | bool

- name: Starting Nova-compute-ironic container
  docker:
    tty: True
    net: host
    pull: "{{ docker_pull_policy }}"
    restart_policy: "{{ docker_restart_policy }}"
    restart_policy_retry: "{{ docker_restart_policy_retry }}"
    state: reloaded
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
    insecure_registry: "{{ docker_insecure_registry }}"
    privileged: True
    name: nova_compute_ironic
    image: "{{ nova_compute_ironic_image_full }}"
    volumes:
      - "{{ node_config_directory }}/nova-compute-ironic/:{{ container_config_directory }}/:ro"
      - "/var/lib/kolla/dev/log:/dev/log"
    env:
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
  when:
    - inventory_hostname in groups['nova-compute-ironic']
    - enable_ironic | bool

- name: Starting fake Nova-compute containers
  docker:
    tty: True
    net: host
    pull: "{{ docker_pull_policy }}"
    restart_policy: "{{ docker_restart_policy }}"
    restart_policy_retry: "{{ docker_restart_policy_retry }}"
    state: reloaded
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
    insecure_registry: "{{ docker_insecure_registry }}"
    privileged: True
    name: nova_compute_fake_{{ item }}
    image: "{{ nova_compute_image_full }}"
    volumes:
      - "{{ node_config_directory }}/nova-compute-fake-{{ item }}/:{{ container_config_directory }}/:ro"
      - "/lib/modules:/lib/modules:ro"
      - "/run:/run"
      - "/var/lib/kolla/dev/log:/dev/log"
    env:
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
  with_sequence: start=1 end={{ num_nova_fake_per_node }}
  when:
    - inventory_hostname in groups['compute']
    - enable_nova_fake | bool
