[tox]
minversion = 1.6
skipsdist = True
envlist = functional,pep8

[testenv]
install_command = pip install -U {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt

[testenv:pep8]
commands =
    flake8

[testenv:venv]
commands = {posargs}

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:validate-contents]
commands =
    {toxinidir}/tools/validate-all-json.sh
    {toxinidir}/tools/validate-all-yaml.sh
    {toxinidir}/tools/validate-all-maintainer.sh

[testenv:bashate]
deps = bashate
whitelist_externals = bash
# tox improperly interprets # and {1} in regex, so match on [[:punct:]]+
commands =
    bash -c "files=`egrep -rlI --exclude-dir .git --exclude-dir .tox '^[[:punct:]]+!/(bin/|/usr/bin/env )(ba)?sh' .` && bashate $files"

[testenv:setupenv]
whitelist_externals = bash
commands = bash -c tests/setup_gate.sh

# These tests are duplicated because of the namechange of the jobs upstream
# to allow continued use of the job-template. This way the gate never breaks
# TODO(SamYaple): Remove once new gates are in place
[testenv:images-centos-binary]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.BuildTestCentosBinary

# TODO(SamYaple): Remove once new gates are in place
[testenv:images-centos-source]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.BuildTestCentosSource

# TODO(SamYaple): Remove once new gates are in place
[testenv:images-ubuntu-source]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.BuildTestUbuntuSource

[testenv:build-images-centos-binary]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.BuildTestCentosBinary

[testenv:build-images-centos-source]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.BuildTestCentosSource

[testenv:build-images-ubuntu-source]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.BuildTestUbuntuSource

[testenv:deploy-images-centos-binary]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.DeployTestCentosBinary
   sudo tests/deploy_kolla.sh centos binary

[testenv:deploy-images-centos-source]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.DeployTestCentosSource
   sudo tests/deploy_kolla.sh centos source

[testenv:deploy-images-ubuntu-source]
whitelist_externals = find
                      bash
                      sudo
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   sudo -g docker testr run test_build.DeployTestUbuntuSource
   sudo tests/deploy_kolla.sh ubuntu source

[testenv:functional]
whitelist_externals = find
                      bash
commands =
   find . -type f -name "*.pyc" -delete
   bash -c "if [ ! -d .testrepository ]; then testr init; fi"
   testr run ^(?!test_images).*

[flake8]
show-source = True
exclude=.git,.tox,doc,ansible/library,docker/kolla-ansible
